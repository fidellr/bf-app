basePath: /api
definitions:
  handlers.ErrorResponse:
    properties:
      code:
        example: 404
        type: integer
      details:
        items:
          $ref: '#/definitions/handlers.ValidationError'
        type: array
      error:
        example: not found
        type: string
      message:
        example: book not found
        type: string
    type: object
  handlers.ValidationError:
    properties:
      field:
        type: string
      message:
        type: string
    type: object
  models.Book:
    properties:
      author:
        maxLength: 100
        minLength: 1
        type: string
      created_at:
        type: string
      id:
        type: integer
      isbn:
        type: string
      pages:
        minimum: 5
        type: integer
      published:
        type: string
      title:
        maxLength: 200
        minLength: 1
        type: string
      updated_at:
        type: string
    required:
    - author
    - isbn
    - pages
    - published
    - title
    type: object
  models.BookCreateRequest:
    properties:
      author:
        maxLength: 100
        minLength: 1
        type: string
      isbn:
        type: string
      pages:
        minimum: 5
        type: integer
      published:
        type: string
      title:
        maxLength: 200
        minLength: 1
        type: string
    required:
    - author
    - isbn
    - pages
    - published
    - title
    type: object
  models.BookListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.Book'
        type: array
      limit:
        type: integer
      page:
        example: 10
        type: integer
      page_size:
        example: 10
        type: integer
      total_pages:
        example: 10
        type: integer
    type: object
  models.BookUpdateRequest:
    properties:
      author:
        maxLength: 100
        minLength: 1
        type: string
      isbn:
        type: string
      pages:
        minimum: 5
        type: integer
      published:
        type: string
      title:
        maxLength: 200
        minLength: 1
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: fidelramadhan@gmail.com
    name: Fidel Ramadhan
  description: This is a book management server for a RESTful API.
  title: Book Management API
  version: "1.0"
paths:
  /books:
    get:
      consumes:
      - application/json
      description: Get a paginated list of books
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 20
        description: Items per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Cache-Control:
              description: max-age=60, public
              type: string
          schema:
            $ref: '#/definitions/models.BookListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: List all books
      tags:
      - books
    post:
      consumes:
      - application/json
      description: Add a new book to the store
      parameters:
      - description: Book data
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/models.BookCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Book'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Create a new book
      tags:
      - books
  /books/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a book by ID (soft delete)
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Delete a book
      tags:
      - books
    get:
      consumes:
      - application/json
      description: Get a single book by its ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Cache-Control:
              description: max-age=3600, public
              type: string
          schema:
            $ref: '#/definitions/models.Book'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Get a book by ID
      tags:
      - books
    put:
      consumes:
      - application/json
      description: Update an existing book by ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      - description: Book data
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/models.BookUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Book'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Update a book
      tags:
      - books
schemes:
- http
swagger: "2.0"
